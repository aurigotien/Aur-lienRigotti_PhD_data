### Simulation parameters ###

        ## Simulation parameters ##
        
		# Choosen parametres 
		
		variable 	PI equal 3.14 # constant PI 
		
		# Constant to be modified by the python routine 
		
		#variable_D_MIN#
		#variable_D_MAX#
		#variable_N_GRAINS#
		#variable_LINI#
		#variable_RHO#
		#variable_VISC#  
		
		# Simulation parameters 
		variable 	D_AVE equal "(v_D_MIN + v_D_MAX)/2" # average diameter of the grains 
		variable     	PHI_AIMED equal 0.8 # packing fraction aimed for the compression
		variable 	SH_LEN equal 60 # length of the shearing step in second 
	
   		variable 	CUTOFF equal 1.4 # cutoff distance for coordination number computation
		variable 	K_N equal 1.1E8 # normal stiffness
		variable 	K_T equal 9.1E7 # tangential stiffness 
		variable 	GAMMA_N equal 655 # normal damping coefficient
		variable	GAMMA_T equal 600 # tangential damping coefficient 
		variable 	MU equal 0.7 # grain/grain friction coefficient
		
		dimension	2 # 2D simulation
		boundary	p p p # Bondary condtion, p periodic conditions
		atom_style   	sphere # Spherical particles, must define diameters and weigth for every particles create
		newton       	on # off = no action/reaction
		comm_modify  	vel yes 
		units        	si # scientific units used 
    
	## Geometry ##
        
		region boite 	block 0 ${L_INI} 0 ${L_INI} -0.5 0.5 units box # Create a region "boite" L_INIxL_INIx1
		box          	tilt large # allow large deformation of the box A(xy) > 45°
		create_box   	2 boite # Create the simulation box "boite" with 1 type of grains
		change_box   	all triclinic # set periodic boundary conditions
		neighbor     	0.1 bin # Update frequency of the particle list 
		neigh_modify delay 10 # Update frequency of the particle list every 10 step of time
	        
	## Grain insertion ##  
	      
		read_data 	rand_config.lj add merge # add the rand_config file with random distribution of grains in space / diameter
		pair_style   	gran/hertz/history ${K_N} ${K_T} ${GAMMA_N} ${GAMMA_T} 0 1 # contact Hookien entre particule sans friction
		pair_coeff	* * 
    
	## Variable of the problem ##
        
		# This block ensure that the computed values are actualised
        	compute      	dgrain all property/atom diameter # compute the diameter  of the grains -> output = scalare / grain
		compute      	scal_dgrain all reduce ave c_dgrain # compute the mean diameter of the particles 
		thermo_style 	custom step pxx pyy pxy c_scal_dgrain # modification of the output 
		run          	0
                        
		# Variable of grains diametre
		variable     	D_MIN atom "c_dgrain == v_DMIN" 
		variable     	D_MAX atom "c_dgrain == v_DMAX"
            
      	## Group of grain diameter ##
        
		# Attribution of the group per size of grains
		group        	dgrain_min variable D_MIN type 1# grains with d = dmin in this group
		group        	dgrain_max variable D_MAX type 2# grains d = dmax in this group

### End of initialisation step ###
